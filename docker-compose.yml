version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: urutibiz-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - urutibiz-network

  # Backend API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: urutibiz-api
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: ep-wandering-dew-a8rs9ep6-pooler.eastus2.azure.neon.tech
      DB_PORT: 5432
      DB_NAME: urutibizdb
      DB_USER: neondb_owner
      DB_PASSWORD: npg_vKmLiNQ1O5wh
      DB_SSL: true
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    ports:
      - "3000:3000"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - urutibiz-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: urutibiz-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - urutibiz-network

volumes:
  redis_data:
    driver: local

networks:
  urutibiz-network:
    driver: bridge
