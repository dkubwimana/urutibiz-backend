urutibz-backend-ts/
├── 📄 README.md
├── 📄 package.json
├── 📄 package-lock.json
├── 📄 tsconfig.json
├── 📄 tsconfig.build.json
├── 📄 .eslintrc.js
├── 📄 .eslintignore
├── 📄 .prettierrc
├── 📄 .prettierignore
├── 📄 .gitignore
├── 📄 .env.example
├── 📄 .env
├── 📄 jest.config.js
├── 📄 nodemon.json
├── 📄 Dockerfile
├── 📄 docker-compose.yml
├── 📄 docker-compose.dev.yml
├── 📄 .dockerignore
├── 📄 nginx.conf
├── 📄 CHANGELOG.md
├── 📄 LICENSE
│
├── 📁 src/
│   ├── 📄 server.ts                     # Main application entry point
│   ├── 📄 app.ts                        # Express app configuration
│   │
│   ├── 📁 config/                       # Configuration files
│   │   ├── 📄 index.ts                  # Export all configs
│   │   ├── 📄 config.ts                 # Main app configuration
│   │   ├── 📄 database.ts               # Database configuration & connection
│   │   ├── 📄 redis.ts                  # Redis configuration & connection
│   │   ├── 📄 passport.ts               # Passport authentication strategies
│   │   ├── 📄 swagger.ts                # API documentation configuration
│   │   ├── 📄 cloudinary.ts             # Image upload configuration
│   │   ├── 📄 aws.ts                    # AWS S3 configuration
│   │   ├── 📄 stripe.ts                 # Stripe payment configuration
│   │   ├── 📄 twilio.ts                 # SMS service configuration
│   │   └── 📄 constants.ts              # Application constants
│   │
│   ├── 📁 types/                        # TypeScript type definitions
│   │   ├── 📄 index.ts                  # Main type exports
│   │   ├── 📄 auth.types.ts             # Authentication related types
│   │   ├── 📄 user.types.ts             # User related types
│   │   ├── 📄 product.types.ts          # Product related types
│   │   ├── 📄 booking.types.ts          # Booking related types
│   │   ├── 📄 payment.types.ts          # Payment related types
│   │   ├── 📄 ai.types.ts               # AI service types
│   │   ├── 📄 api.types.ts              # API request/response types
│   │   ├── 📄 database.types.ts         # Database related types
│   │   ├── 📄 common.types.ts           # Common shared types
│   │   └── 📄 express.d.ts              # Express type augmentation
│   │
│   ├── 📁 interfaces/                   # Interface definitions
│   │   ├── 📄 IUser.ts                  # User interface
│   │   ├── 📄 IProduct.ts               # Product interface
│   │   ├── 📄 IBooking.ts               # Booking interface
│   │   ├── 📄 IPayment.ts               # Payment interface
│   │   ├── 📄 IRepository.ts            # Repository pattern interface
│   │   ├── 📄 IService.ts               # Service pattern interface
│   │   └── 📄 IController.ts            # Controller pattern interface
│   │
│   ├── 📁 models/                       # Database models
│   │   ├── 📄 index.ts                  # Model exports
│   │   ├── 📄 Base.model.ts             # Base model with common methods
│   │   ├── 📄 User.model.ts             # User model
│   │   ├── 📄 Product.model.ts          # Product model
│   │   ├── 📄 Category.model.ts         # Category model
│   │   ├── 📄 Booking.model.ts          # Booking model
│   │   ├── 📄 Payment.model.ts          # Payment model
│   │   ├── 📄 Review.model.ts           # Review model
│   │   ├── 📄 Message.model.ts          # Message model
│   │   ├── 📄 Notification.model.ts     # Notification model
│   │   ├── 📄 Country.model.ts          # Country model
│   │   └── 📄 AuditLog.model.ts         # Audit log model
│   │
│   ├── 📁 repositories/                 # Repository layer (optional)
│   │   ├── 📄 index.ts                  # Repository exports
│   │   ├── 📄 BaseRepository.ts         # Base repository class
│   │   ├── 📄 UserRepository.ts         # User repository
│   │   ├── 📄 ProductRepository.ts      # Product repository
│   │   ├── 📄 BookingRepository.ts      # Booking repository
│   │   └── 📄 PaymentRepository.ts      # Payment repository
│   │
│   ├── 📁 controllers/                  # Route controllers
│   │   ├── 📄 index.ts                  # Controller exports
│   │   ├── 📄 BaseController.ts         # Base controller with common methods
│   │   ├── 📄 auth.controller.ts        # Authentication endpoints
│   │   ├── 📄 users.controller.ts       # User management
│   │   ├── 📄 products.controller.ts    # Product management
│   │   ├── 📄 categories.controller.ts  # Category management
│   │   ├── 📄 bookings.controller.ts    # Booking management
│   │   ├── 📄 payments.controller.ts    # Payment processing
│   │   ├── 📄 reviews.controller.ts     # Review management
│   │   ├── 📄 messages.controller.ts    # Messaging system
│   │   ├── 📄 ai.controller.ts          # AI services
│   │   ├── 📄 admin.controller.ts       # Admin operations
│   │   └── 📄 analytics.controller.ts   # Analytics endpoints
│   │
│   ├── 📁 services/                     # Business logic services
│   │   ├── 📄 index.ts                  # Service exports
│   │   ├── 📄 BaseService.ts            # Base service class
│   │   ├── 📄 auth.service.ts           # Authentication logic
│   │   ├── 📄 user.service.ts           # User business logic
│   │   ├── 📄 product.service.ts        # Product business logic
│   │   ├── 📄 booking.service.ts        # Booking business logic
│   │   ├── 📄 payment.service.ts        # Payment processing
│   │   ├── 📄 email.service.ts          # Email notifications
│   │   ├── 📄 sms.service.ts            # SMS notifications
│   │   ├── 📄 upload.service.ts         # File upload handling
│   │   ├── 📄 ai.service.ts             # AI integration
│   │   ├── 📄 currency.service.ts       # Currency conversion
│   │   ├── 📄 notification.service.ts   # Push notifications
│   │   ├── 📄 analytics.service.ts      # Analytics service
│   │   ├── 📄 search.service.ts         # Search functionality
│   │   └── 📄 cache.service.ts          # Caching service
│   │
│   ├── 📁 middleware/                   # Express middleware
│   │   ├── 📄 index.ts                  # Middleware exports
│   │   ├── 📄 auth.middleware.ts        # Authentication middleware
│   │   ├── 📄 validation.middleware.ts  # Request validation
│   │   ├── 📄 rateLimit.middleware.ts   # Rate limiting
│   │   ├── 📄 error.middleware.ts       # Error handling
│   │   ├── 📄 upload.middleware.ts      # File upload handling
│   │   ├── 📄 cors.middleware.ts        # CORS configuration
│   │   ├── 📄 security.middleware.ts    # Security headers
│   │   ├── 📄 logging.middleware.ts     # Request logging
│   │   ├── 📄 cache.middleware.ts       # Response caching
│   │   └── 📄 metrics.middleware.ts     # Performance metrics
│   │
│   ├── 📁 routes/                       # API routes
│   │   ├── 📄 index.ts                  # Route aggregation
│   │   ├── 📄 auth.routes.ts            # Authentication routes
│   │   ├── 📄 users.routes.ts           # User routes
│   │   ├── 📄 products.routes.ts        # Product routes
│   │   ├── 📄 categories.routes.ts      # Category routes
│   │   ├── 📄 bookings.routes.ts        # Booking routes
│   │   ├── 📄 payments.routes.ts        # Payment routes
│   │   ├── 📄 reviews.routes.ts         # Review routes
│   │   ├── 📄 messages.routes.ts        # Message routes
│   │   ├── 📄 ai.routes.ts              # AI routes
│   │   ├── 📄 admin.routes.ts           # Admin routes
│   │   └── 📄 analytics.routes.ts       # Analytics routes
│   │
│   ├── 📁 validators/                   # Request validators
│   │   ├── 📄 index.ts                  # Validator exports
│   │   ├── 📄 auth.validator.ts         # Authentication validators
│   │   ├── 📄 user.validator.ts         # User validators
│   │   ├── 📄 product.validator.ts      # Product validators
│   │   ├── 📄 booking.validator.ts      # Booking validators
│   │   ├── 📄 payment.validator.ts      # Payment validators
│   │   ├── 📄 common.validator.ts       # Common validators
│   │   └── 📄 custom.validator.ts       # Custom validation rules
│   │
│   ├── 📁 utils/                        # Utility functions
│   │   ├── 📄 index.ts                  # Utility exports
│   │   ├── 📄 logger.ts                 # Logging utility
│   │   ├── 📄 response.ts               # Response helpers
│   │   ├── 📄 encryption.ts             # Encryption utilities
│   │   ├── 📄 validation.ts             # Validation helpers
│   │   ├── 📄 date.ts                   # Date utilities
│   │   ├── 📄 string.ts                 # String utilities
│   │   ├── 📄 number.ts                 # Number utilities
│   │   ├── 📄 array.ts                  # Array utilities
│   │   ├── 📄 object.ts                 # Object utilities
│   │   ├── 📄 file.ts                   # File utilities
│   │   ├── 📄 email.ts                  # Email utilities
│   │   ├── 📄 phone.ts                  # Phone utilities
│   │   ├── 📄 currency.ts               # Currency utilities
│   │   └── 📄 constants.ts              # Utility constants
│   │
│   ├── 📁 jobs/                         # Background jobs
│   │   ├── 📄 index.ts                  # Job exports & initialization
│   │   ├── 📄 BaseJob.ts                # Base job class
│   │   ├── 📄 email.job.ts              # Email processing jobs
│   │   ├── 📄 sms.job.ts                # SMS processing jobs
│   │   ├── 📄 ai.job.ts                 # AI processing jobs
│   │   ├── 📄 analytics.job.ts          # Analytics processing
│   │   ├── 📄 cleanup.job.ts            # Cleanup jobs
│   │   ├── 📄 backup.job.ts             # Database backup jobs
│   │   └── 📄 notification.job.ts       # Notification jobs
│   │
│   ├── 📁 socket/                       # WebSocket handlers
│   │   ├── 📄 index.ts                  # Socket exports
│   │   ├── 📄 socket.handler.ts         # Main socket handler
│   │   ├── 📄 auth.socket.ts            # Authentication socket events
│   │   ├── 📄 chat.socket.ts            # Chat socket events
│   │   ├── 📄 booking.socket.ts         # Booking socket events
│   │   ├── 📄 notification.socket.ts    # Notification socket events
│   │   └── 📄 admin.socket.ts           # Admin socket events
│   │
│   ├── 📁 decorators/                   # TypeScript decorators
│   │   ├── 📄 index.ts                  # Decorator exports
│   │   ├── 📄 auth.decorator.ts         # Authentication decorators
│   │   ├── 📄 validation.decorator.ts   # Validation decorators
│   │   ├── 📄 cache.decorator.ts        # Caching decorators
│   │   ├── 📄 rateLimit.decorator.ts    # Rate limiting decorators
│   │   └── 📄 log.decorator.ts          # Logging decorators
│   │
│   └── 📁 events/                       # Event system
│       ├── 📄 index.ts                  # Event exports
│       ├── 📄 EventEmitter.ts           # Custom event emitter
│       ├── 📄 user.events.ts            # User events
│       ├── 📄 booking.events.ts         # Booking events
│       ├── 📄 payment.events.ts         # Payment events
│       └── 📄 system.events.ts          # System events
│
├── 📁 database/                         # Database files
│   ├── 📁 migrations/                   # Database migrations
│   │   ├── 📄 001_create_users_table.ts
│   │   ├── 📄 002_create_products_table.ts
│   │   ├── 📄 003_create_bookings_table.ts
│   │   ├── 📄 004_create_payments_table.ts
│   │   ├── 📄 005_create_reviews_table.ts
│   │   ├── 📄 006_create_messages_table.ts
│   │   ├── 📄 007_create_notifications_table.ts
│   │   ├── 📄 008_create_categories_table.ts
│   │   ├── 📄 009_create_countries_table.ts
│   │   └── 📄 010_create_audit_logs_table.ts
│   │
│   ├── 📁 seeds/                        # Database seeders
│   │   ├── 📄 001_countries.ts
│   │   ├── 📄 002_categories.ts
│   │   ├── 📄 003_admin_users.ts
│   │   ├── 📄 004_sample_products.ts
│   │   └── 📄 005_sample_bookings.ts
│   │
│   └── 📄 knexfile.ts                   # Knex configuration
│
├── 📁 tests/                            # Test files
│   ├── 📄 jest.setup.ts                 # Jest setup configuration
│   ├── 📄 test.config.ts                # Test configuration
│   ├── 📄 helpers.ts                    # Test helper functions
│   │
│   ├── 📁 unit/                         # Unit tests
│   │   ├── 📁 models/
│   │   │   ├── 📄 User.model.test.ts
│   │   │   ├── 📄 Product.model.test.ts
│   │   │   └── 📄 Booking.model.test.ts
│   │   │
│   │   ├── 📁 services/
│   │   │   ├── 📄 auth.service.test.ts
│   │   │   ├── 📄 user.service.test.ts
│   │   │   └── 📄 payment.service.test.ts
│   │   │
│   │   ├── 📁 utils/
│   │   │   ├── 📄 logger.test.ts
│   │   │   ├── 📄 encryption.test.ts
│   │   │   └── 📄 validation.test.ts
│   │   │
│   │   └── 📁 middleware/
│   │       ├── 📄 auth.middleware.test.ts
│   │       └── 📄 validation.middleware.test.ts
│   │
│   ├── 📁 integration/                  # Integration tests
│   │   ├── 📁 controllers/
│   │   │   ├── 📄 auth.controller.test.ts
│   │   │   ├── 📄 users.controller.test.ts
│   │   │   ├── 📄 products.controller.test.ts
│   │   │   └── 📄 bookings.controller.test.ts
│   │   │
│   │   ├── 📁 routes/
│   │   │   ├── 📄 auth.routes.test.ts
│   │   │   ├── 📄 users.routes.test.ts
│   │   │   └── 📄 products.routes.test.ts
│   │   │
│   │   └── 📁 database/
│   │       ├── 📄 migrations.test.ts
│   │       └── 📄 seeds.test.ts
│   │
│   ├── 📁 e2e/                          # End-to-end tests
│   │   ├── 📄 auth.e2e.test.ts
│   │   ├── 📄 booking.e2e.test.ts
│   │   ├── 📄 payment.e2e.test.ts
│   │   └── 📄 admin.e2e.test.ts
│   │
│   ├── 📁 fixtures/                     # Test data fixtures
│   │   ├── 📄 users.fixture.ts
│   │   ├── 📄 products.fixture.ts
│   │   ├── 📄 bookings.fixture.ts
│   │   └── 📄 payments.fixture.ts
│   │
│   └── 📁 mocks/                        # Mock implementations
│       ├── 📄 database.mock.ts
│       ├── 📄 redis.mock.ts
│       ├── 📄 email.mock.ts
│       ├── 📄 sms.mock.ts
│       └── 📄 payment.mock.ts
│
├── 📁 docs/                             # Documentation
│   ├── 📄 README.md
│   ├── 📄 API.md                        # API documentation
│   ├── 📄 DEPLOYMENT.md                 # Deployment guide
│   ├── 📄 CONTRIBUTING.md               # Contribution guidelines
│   ├── 📄 SECURITY.md                   # Security guidelines
│   ├── 📄 ARCHITECTURE.md               # System architecture
│   ├── 📄 DATABASE.md                   # Database schema
│   ├── 📄 TESTING.md                    # Testing guide
│   │
│   ├── 📁 swagger/                      # Swagger documentation
│   │   ├── 📄 auth.swagger.ts
│   │   ├── 📄 users.swagger.ts
│   │   ├── 📄 products.swagger.ts
│   │   └── 📄 bookings.swagger.ts
│   │
│   └── 📁 postman/                      # Postman collections
│       ├── 📄 UrutiBz_Auth.postman_collection.json
│       ├── 📄 UrutiBz_Products.postman_collection.json
│       └── 📄 UrutiBz_Environment.postman_environment.json
│
├── 📁 scripts/                          # Utility scripts
│   ├── 📄 setup.sh                      # Initial setup script
│   ├── 📄 build.sh                      # Build script
│   ├── 📄 deploy.sh                     # Deployment script
│   ├── 📄 backup.sh                     # Database backup script
│   ├── 📄 restore.sh                    # Database restore script
│   ├── 📄 seed.sh                       # Database seeding script
│   ├── 📄 cleanup.sh                    # Cleanup script
│   └── 📄 health-check.sh               # Health check script
│
├── 📁 logs/                             # Log files (gitignored)
│   ├── 📄 error.log
│   ├── 📄 combined.log
│   ├── 📄 access.log
│   └── 📄 audit.log
│
├── 📁 uploads/                          # File uploads (gitignored)
│   ├── 📁 products/
│   ├── 📁 users/
│   └── 📁 temp/
│
├── 📁 dist/                             # Compiled TypeScript (gitignored)
│   ├── 📄 server.js
│   ├── 📄 app.js
│   └── 📁 [mirrored src structure]
│
├── 📁 coverage/                         # Test coverage (gitignored)
│   └── 📄 lcov.info
│
└── 📁 node_modules/                     # Dependencies (gitignored)
    └── [npm packages]